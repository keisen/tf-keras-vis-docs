Scores
==================================

Abstraction
------------

The Scores are used to specify somethings you want to visualized with Saliency, X-CAMs and ActivationMaximization.
Here, we will introduce the fundamental score usage corresponding to the models below.

* Categorical classification model
* Binary classification model
* Regression model

If you want just to see the API specification, please skip to
[Classes section](tf_keras_vis.utils.scores.html#module-tf_keras_vis.utils.scores).


Description
------------

### Categorical classification task

:::{note}
Here, we will explain it with pre-trained [VGG16](https://www.tensorflow.org/api_docs/python/tf/keras/applications/vgg16/VGG16).
:::

Commonly, the output shape of the categorical classification model is `(batch_size, num_of_classes)` such below:

```python
import tensorflow as tf

model = tf.keras.applications.VGG16()
print(model.output.shape)
```

```bash
(None, 1000)
```

If you want to visualize something corresponding to No.1 of the indices,
you can simply implement the score function as follows:

```python
def score_function(output):
   return output[:, 1]
```

The `output` variable assigned model output value whose shape is `(None, 1000)`.
So, the code snippet above means that it will return the values corresponding to the category of No.1.

```python
from matplotlib import pyplot as plt
from tf_keras_vis.activation_maximization import ActivationMaximization
from tf_keras_vis.utils.model_modifiers import ReplaceToLinear

activation_maximization  = ActivationMaximization(model, model_modifier=ReplaceToLinear())
activations = activation_maximization(score_function)
plt.imshow(activations[0])
```



[](!images/goldfish.png)


```python
import tensorflow as tf

model = tf.keras.applications.MobileNetV2(input_shape=(224, 224, 3))
```

Load images

```python
# TODO load image
```

(image)[!]


Implement score
```python
```

Run

```python
# TODO gradcam
```




### Binary classification task


### Regression task


Advanced usage
--------------

### How to visualize feature corresponding to one of model outputs in multiple outputs model

### How to synthesized composed features

#### Feature visualization

#### Attentions


Classes
-----------------

```{eval-rst}
.. automodule:: tf_keras_vis.utils.scores
   :members:
   :show-inheritance:
```
